import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as r,c,a,d as e,b as n,e as o,r as i}from"./app.b0370e1b.js";const l={},h=o(`<p>请求和响应是成对出现的，有请求就有响应。</p><h2 id="一、-基础" tabindex="-1"><a class="header-anchor" href="#一、-基础" aria-hidden="true">#</a> 一、 基础</h2><h3 id="web-资源的分类" tabindex="-1"><a class="header-anchor" href="#web-资源的分类" aria-hidden="true">#</a> Web 资源的分类</h3><blockquote><p>静态资源： html、css、js、txt、mp4 视频 , jpg 图片</p><p>动态资源： jsp 页面、Servlet 程序</p></blockquote><h3 id="常用的web-服务器" tabindex="-1"><a class="header-anchor" href="#常用的web-服务器" aria-hidden="true">#</a> 常用的Web 服务器</h3><p>Tomcat、Jboss、GlassFish、Resin、WebLogic</p><h3 id="tomcat-服务器和servlet-版本的对应关系" tabindex="-1"><a class="header-anchor" href="#tomcat-服务器和servlet-版本的对应关系" aria-hidden="true">#</a> Tomcat 服务器和Servlet 版本的对应关系</h3><p><img src="https://gitee.com/private_crh/notes/raw/javaweb/typora/image-20241001115805003.png" alt="image-20241001115805003"></p><h2 id="二、-使用" tabindex="-1"><a class="header-anchor" href="#二、-使用" aria-hidden="true">#</a> 二、 使用</h2><p>解压即可使用</p><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h3><blockquote><ol><li>bin 目录下的 startup.bat 文件，双击</li><li>cd 到 bin 下，执行catalina run</li></ol></blockquote><h3 id="停止" tabindex="-1"><a class="header-anchor" href="#停止" aria-hidden="true">#</a> 停止</h3><blockquote><ol><li>点击 tomcat 服务器窗口的 x 关闭按钮</li><li>把 Tomcat 服务器窗口置为当前窗口，然后按快捷键 Ctrl+C</li><li>bin 目录下的 shutdown.bat，双击</li></ol></blockquote><h3 id="改端口" tabindex="-1"><a class="header-anchor" href="#改端口" aria-hidden="true">#</a> 改端口<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></h3><p>conf / server.xml 的connector 标签</p><h3 id="部署" tabindex="-1"><a class="header-anchor" href="#部署" aria-hidden="true">#</a> 部署</h3><blockquote><ol><li>webapps下一个目录等于一个工程</li><li>conf / Catalina / localhost / xml 文件</li></ol></blockquote><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Context</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/abc<span class="token punctuation">&quot;</span></span> <span class="token attr-name">docBase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>E:\\book<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="访问" tabindex="-1"><a class="header-anchor" href="#访问" aria-hidden="true">#</a> 访问</h3>`,20),p={href:"http://ip",target:"_blank",rel:"noopener noreferrer"},d={href:"http://ip",target:"_blank",rel:"noopener noreferrer"},u=o('<h2 id="三、-idea-整合-tomcat" tabindex="-1"><a class="header-anchor" href="#三、-idea-整合-tomcat" aria-hidden="true">#</a> 三、 IDEA 整合 Tomcat</h2><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>Tomcat默认端口8080，http默认端口80（可隐藏） <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li></ol></section>',3);function b(f,m){const t=i("ExternalLinkIcon");return r(),c("div",null,[h,a("p",null,[a("a",p,[e("http://ip"),n(t)]),e(":port/ ====>>>> 没有工程名的时候，默认访问的是 ROOT 工程。")]),a("p",null,[a("a",d,[e("http://ip"),n(t)]),e(":port/工程名/ ====>>>> 没有资源名，默认访问 index.html 页面")]),u])}const _=s(l,[["render",b],["__file","Tomcat.html.vue"]]);export{_ as default};
